#Por si la vuelvo a necesitar
def pasar(hexas):
	bytes = []
	cada = len(hexas) / 16

	for i, num in enumerate(hexas):
		if i % (len(hexas) / 16) == 0:
			bytes.append([])
		bytes[-1].append(num)

	finales = []

	for i in range(len(bytes[0])):
		finales.append(map(lambda y: y[i], bytes))
	
	return reduce(lambda x, y: x + y, finales)

bytes = [127, 69, 76, 70, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 1, 0, 0, 0, 128, 132, 4, 8, 52, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 52, 0, 32, 0, 1, 0, 40, 0, 3, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 128, 4, 8, 0, 128, 4, 8, 151, 5, 0, 0, 151, 5, 0, 0, 7, 0, 0, 0, 0, 16, 0, 0, 0, 46, 115, 104, 115, 116, 114, 116, 97, 98, 0, 46, 116, 101, 120, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 1, 0, 0, 0, 6, 0, 0, 0, 224, 128, 4, 8, 224, 0, 0, 0, 183, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 81, 83, 80, 184, 4, 0, 0, 0, 187, 1, 0, 0, 0, 137, 225, 186, 1, 0, 0, 0, 205, 128, 88, 91, 89, 90, 195, 85, 137, 229, 129, 236, 36, 0, 0, 0, 82, 81, 83, 184, 54, 0, 0, 0, 187, 0, 0, 0, 0, 185, 1, 84, 0, 0, 141, 85, 220, 205, 128, 129, 101, 232, 245, 255, 255, 255, 184, 54, 0, 0, 0, 187, 0, 0, 0, 0, 185, 2, 84, 0, 0, 141, 85, 220, 205, 128, 49, 192, 80, 184, 3, 0, 0, 0, 187, 0, 0, 0, 0, 137, 225, 186, 1, 0, 0, 0, 205, 128, 129, 77, 232, 10, 0, 0, 0, 184, 54, 0, 0, 0, 187, 0, 0, 0, 0, 185, 2, 84, 0, 0, 141, 85, 220, 205, 128, 88, 91, 89, 90, 137, 236, 93, 195, 184, 4, 0, 0, 0, 187, 1, 0, 0, 0, 205, 128, 195, 144, 144, 144, 176, 10, 232, 89, 255, 255, 255, 195, 4, 48, 232, 81, 255, 255, 255, 195, 61, 0, 0, 0, 128, 117, 78, 176, 45, 232, 66, 255, 255, 255, 176, 2, 232, 227, 255, 255, 255, 176, 1, 232, 220, 255, 255, 255, 176, 4, 232, 213, 255, 255, 255, 176, 7, 232, 206, 255, 255, 255, 176, 4, 232, 199, 255, 255, 255, 176, 8, 232, 192, 255, 255, 255, 176, 3, 232, 185, 255, 255, 255, 176, 6, 232, 178, 255, 255, 255, 176, 4, 232, 171, 255, 255, 255, 176, 8, 232, 164, 255, 255, 255, 195, 61, 0, 0, 0, 0, 125, 11, 80, 176, 45, 232, 236, 254, 255, 255, 88, 247, 216, 61, 10, 0, 0, 0, 15, 140, 239, 0, 0, 0, 61, 100, 0, 0, 0, 15, 140, 209, 0, 0, 0, 61, 232, 3, 0, 0, 15, 140, 179, 0, 0, 0, 61, 16, 39, 0, 0, 15, 140, 149, 0, 0, 0, 61, 160, 134, 1, 0, 124, 123, 61, 64, 66, 15, 0, 124, 97, 61, 128, 150, 152, 0, 124, 71, 61, 0, 225, 245, 5, 124, 45, 61, 0, 202, 154, 59, 124, 19, 186, 0, 0, 0, 0, 187, 0, 202, 154, 59, 247, 251, 82, 232, 48, 255, 255, 255, 88, 186, 0, 0, 0, 0, 187, 0, 225, 245, 5, 247, 251, 82, 232, 29, 255, 255, 255, 88, 186, 0, 0, 0, 0, 187, 128, 150, 152, 0, 247, 251, 82, 232, 10, 255, 255, 255, 88, 186, 0, 0, 0, 0, 187, 64, 66, 15, 0, 247, 251, 82, 232, 247, 254, 255, 255, 88, 186, 0, 0, 0, 0, 187, 160, 134, 1, 0, 247, 251, 82, 232, 228, 254, 255, 255, 88, 186, 0, 0, 0, 0, 187, 16, 39, 0, 0, 247, 251, 82, 232, 209, 254, 255, 255, 88, 186, 0, 0, 0, 0, 187, 232, 3, 0, 0, 247, 251, 82, 232, 190, 254, 255, 255, 88, 186, 0, 0, 0, 0, 187, 100, 0, 0, 0, 247, 251, 82, 232, 171, 254, 255, 255, 88, 186, 0, 0, 0, 0, 187, 10, 0, 0, 0, 247, 251, 82, 232, 152, 254, 255, 255, 88, 232, 146, 254, 255, 255, 195, 144, 144, 144, 144, 144, 144, 144, 144, 144, 184, 1, 0, 0, 0, 187, 0, 0, 0, 0, 205, 128, 144, 144, 144, 144, 185, 0, 0, 0, 0, 179, 3, 81, 83, 232, 222, 253, 255, 255, 91, 89, 60, 10, 15, 132, 52, 1, 0, 0, 60, 127, 15, 132, 148, 0, 0, 0, 60, 45, 15, 132, 9, 1, 0, 0, 60, 48, 124, 219, 60, 57, 127, 215, 44, 48, 128, 251, 0, 116, 208, 128, 251, 2, 117, 12, 129, 249, 0, 0, 0, 0, 117, 4, 60, 0, 116, 191, 128, 251, 3, 117, 10, 60, 0, 117, 4, 179, 0, 235, 2, 179, 1, 129, 249, 204, 204, 204, 12, 127, 168, 129, 249, 52, 51, 51, 243, 124, 160, 136, 199, 184, 10, 0, 0, 0, 247, 233, 61, 8, 0, 0, 128, 116, 17, 61, 248, 255, 255, 127, 117, 19, 128, 255, 7, 126, 14, 233, 127, 255, 255, 255, 128, 255, 8, 15, 143, 118, 255, 255, 255, 185, 0, 0, 0, 0, 136, 249, 128, 251, 2, 116, 4, 1, 193, 235, 3, 41, 200, 145, 136, 248, 81, 83, 232, 203, 253, 255, 255, 91, 89, 233, 83, 255, 255, 255, 128, 251, 3, 15, 132, 74, 255, 255, 255, 81, 83, 176, 8, 232, 10, 253, 255, 255, 176, 32, 232, 3, 253, 255, 255, 176, 8, 232, 252, 252, 255, 255, 91, 89, 128, 251, 0, 117, 7, 179, 3, 233, 37, 255, 255, 255, 128, 251, 2, 117, 15, 129, 249, 0, 0, 0, 0, 117, 7, 179, 3, 233, 17, 255, 255, 255, 137, 200, 185, 10, 0, 0, 0, 186, 0, 0, 0, 0, 61, 0, 0, 0, 0, 125, 8, 247, 216, 247, 249, 247, 216, 235, 2, 247, 249, 137, 193, 129, 249, 0, 0, 0, 0, 15, 133, 230, 254, 255, 255, 128, 251, 2, 15, 132, 221, 254, 255, 255, 179, 3, 233, 214, 254, 255, 255, 128, 251, 3, 15, 133, 205, 254, 255, 255, 176, 45, 81, 83, 232, 141, 252, 255, 255, 91, 89, 179, 2, 233, 187, 254, 255, 255, 128, 251, 3, 15, 132, 178, 254, 255, 255, 128, 251, 2, 117, 12, 129, 249, 0, 0, 0, 0, 15, 132, 161, 254, 255, 255, 81, 232, 4, 253, 255, 255, 89, 137, 200, 195]
VIRTUAL_ADDRESS  = int("0x" + reduce(lambda x, y: x + ("" if len(hex(y)[2:]) == 2 else "0") + hex(y)[2:], [bytes[i] for i in range(63, 59, -1)], ""), 16)
ADDR  = int("0x" + reduce(lambda x, y: x + ("" if len(hex(y)[2:]) == 2 else "0") + hex(y)[2:], [bytes[i] for i in range(196, 192, -1)], ""), 16)
HEADER = reduce(lambda x,y: x + chr(y), bytes, "")
#comando: objdump -M intel -D ejec | less
